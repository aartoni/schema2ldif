.\" Automatically generated by Pod::Man 2.28 (Pod::Simple 3.28)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is turned on, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{
.    if \nF \{
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\"
.\" Accent mark definitions (@(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2).
.\" Fear.  Run.  Save yourself.  No user-serviceable parts.
.    \" fudge factors for nroff and troff
.if n \{\
.    ds #H 0
.    ds #V .8m
.    ds #F .3m
.    ds #[ \f1
.    ds #] \fP
.\}
.if t \{\
.    ds #H ((1u-(\\\\n(.fu%2u))*.13m)
.    ds #V .6m
.    ds #F 0
.    ds #[ \&
.    ds #] \&
.\}
.    \" simple accents for nroff and troff
.if n \{\
.    ds ' \&
.    ds ` \&
.    ds ^ \&
.    ds , \&
.    ds ~ ~
.    ds /
.\}
.if t \{\
.    ds ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.    ds ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.    ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.    ds , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.    ds ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.    ds / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
.\}
.    \" troff and (daisy-wheel) nroff accents
.ds : \\k:\h'-(\\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\\n:u'\v'\*(#V'
.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
.ds o \\k:\h'-(\\n(.wu+\w'\(de'u-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\\n:u'\*(#]
.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\f2\(hy\fP\v'.25m'\h'-\*(#H'
.ds D- D\\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\\n:u'
.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
.ds ae a\h'-(\w'a'u*4/10)'e
.ds Ae A\h'-(\w'A'u*4/10)'E
.    \" corrections for vroff
.if v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
.if v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
.    \" for low resolution devices (crt and lpr)
.if \n(.H>23 .if \n(.V>19 \
\{\
.    ds : e
.    ds 8 ss
.    ds o a
.    ds d- d\h'-1'\(ga
.    ds D- D\h'-1'\(hy
.    ds th \o'bp'
.    ds Th \o'LP'
.    ds ae ae
.    ds Ae AE
.\}
.rm #[ #] #H #V #F C
.\" ========================================================================
.\"
.IX Title "LDAP-SCHEMA-MANAGER 1"
.TH LDAP-SCHEMA-MANAGER 1 "2017-04-19" "Schema2ldif 1.3" "Schema2ldif Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
ldap\-schema\-manager \- manage schema to be inserted into in openldap server in cn=config mode
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
ldap-schema-manager [\-y] [\-n] [\-c] [\-o options] [path] [\-h|\-l|\-i schema1 schema2|\-m schema1 schema2|\-e schema1 schema2]
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
This program will list, insert, empty or modify the ldap schemas into an openldap server in cn=config mode.
If a schema is not listed as a path, it will be searched for in the provided path, or in /etc/ldap/schema/ if no path has been provided. 
To insert schemas from working directory prepend them with \*(L"./\*(R".
Schema with no extension is assumed to be .ldif. Specify .schema if you want the tool to autoconvert the schema to ldif file. See the examples for more information
.SS "Options"
.IX Subsection "Options"
.IP "\-i" 6
.IX Item "-i"
This option insert the given list of schemas
.IP "\-m" 6
.IX Item "-m"
This option insert the given list of schemas, replacing already inserted versions of those schemas
.IP "\-e" 6
.IX Item "-e"
This option empty the given list of schemas, removing attributes and objectClasses from those.
This is useful because you cannot delete a schema without restarting slapd.
.IP "\-l" 6
.IX Item "-l"
This option list inserted schemas
.IP "\-n" 6
.IX Item "-n"
This option will make generated ldifs file to not be deleted after execution. Might be useful to understand errors.
.IP "\-c" 6
.IX Item "-c"
This option make the program continue even if an error occur
.IP "\-y" 6
.IX Item "-y"
This option answer yes to all questions. The only question right now is the confirmation one when you ask to empty a schema.
.IP "\-o" 6
.IX Item "-o"
This option allow you to specify specifics options to give to ldap commands such as ldapmodify,
but beware that you will not be able to see things like password prompts as the output of these commands is piped.
.SS "Special options"
.IX Subsection "Special options"
.IP "\-\-tool\-name" 6
.IX Item "--tool-name"
This option allows you to set the binary name to use in usage output, only useful if you wish to create a tool based upon ldap-schema-manager.
.IP "\-\-default\-path" 6
.IX Item "--default-path"
This option defines the default path, which is otherwise /etc/ldap/schema/
.IP "\-\-default\-schemas" 6
.IX Item "--default-schemas"
This option specifies the default list of schemas to use in case no schema list is given. Only useful if you create a tool based upon this one.
The list needs to end with \*(L"\-\-end\*(R".
.SH "EXAMPLES"
.IX Header "EXAMPLES"
.Vb 2
\& admin@ldapserver$ ldap\-schema\-manager \-i /etc/ldap/otherschema/myschema.ldif
\&   Insert the schema /etc/ldap/otherschema/myschema.ldif
\&
\& admin@ldapserver$ ldap\-schema\-manager \-i /etc/ldap/otherschema/myschema.schema
\&   Convert /etc/ldap/otherschema/myschema.schema to ldif and insert it
\&
\& admin@ldapserver$ ldap\-schema\-manager \-i myschema
\&   Insert the schema myschema.ldif from default directory (/etc/ldap/schema/)
\&
\& admin@ldapserver$ ldap\-schema\-manager \-i myschema.schema
\&   Insert the schema myschema.schema from default directory (/etc/ldap/schema/)
\&
\& admin@ldapserver$ ldap\-schema\-manager \-m /etc/ldap/otherschema/myschema.schema
\&   Convert /etc/ldap/otherschema/myschema.schema to ldif and replace the existing schema by this one
\&
\& admin@ldapserver$ ldap\-schema\-manager \-e myschema
\&   Empty the schema myschema
\&
\& admin@ldapserver$ ldap\-schema\-manager \-o "\-H ldap://my.ldap.com \-ZZ \-D \*(Aqcn=admin,cn=config\*(Aq \-w password \-x" \-l
\&   Connect to another ldap server and list schemas
.Ve
.SH "BUGS"
.IX Header "BUGS"
Please report any bugs, or post any suggestions, to the fusiondirectory mailing list fusiondirectory-users or to
<https://forge.fusiondirectory.org/projects/fdirectory/issues/new>
.SH "AUTHOR"
.IX Header "AUTHOR"
Come Bernigaud
.SH "LICENCE AND COPYRIGHT"
.IX Header "LICENCE AND COPYRIGHT"
This code is part of FusionDirectory <http://www.fusiondirectory.org>
.IP "Copyright (C) 2011\-2017 FusionDirectory Project" 1
.IX Item "Copyright (C) 2011-2017 FusionDirectory Project"
.PP
This program is distributed in the hope that it will be useful,
but \s-1WITHOUT ANY WARRANTY\s0; without even the implied warranty of
\&\s-1MERCHANTABILITY\s0 or \s-1FITNESS FOR A PARTICULAR PURPOSE. \s0 See the
\&\s-1GNU\s0 General Public License for more details.
